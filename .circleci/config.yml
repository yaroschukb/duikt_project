version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout

      # Кешування node_modules
      - restore_cache:
          keys:
            - v1-frontend-node-modules-{{ checksum "frontend/package-lock.json" }}
            - v1-backend-node-modules-{{ checksum "backend/package-lock.json" }}

      # Встановлення залежностей та підготовка середовища
      - run:
          name: Install Angular CLI
          command: |
            cd frontend
            npm install -g @angular/cli
            cd ..

      # Встановлення залежностей frontend та backend
      - run:
          name: Install Dependencies
          command: |
            cd frontend/compressApp
            npm install
            cd ../../backend
            npm install
            cd ..

      # Збереження кешу
      - save_cache:
          paths:
            - frontend/node_modules
            - backend/node_modules
          key: v1-frontend-node-modules-{{ checksum "frontend/package-lock.json" }}-backend-node-modules-{{ checksum "backend/package-lock.json" }}

      # Запуск тестів та збірка frontend
      - run:
          name: Run Tests and Build Frontend
          command: |
            cd frontend/compressApp
            npm test
            npm run build
            cd ../../

      # Створення Docker-образу
      - setup_remote_docker:
          version: "default"
      - run:
          name: Build Docker Image
          command: docker build -t $DOCKER_USERNAME/compress-app:latest .

      # Логін у Docker Hub та пуш образу
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker tag $DOCKER_USERNAME/compress-app:latest $DOCKER_USERNAME/compress-app:latest
            docker push $DOCKER_USERNAME/compress-app:latest

workflows:
  version: 2
  build_and_push:
    jobs:
      - build:
          filters:
            branches:
              only: main
